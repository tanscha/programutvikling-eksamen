Index: src/main/java/org/openjfx/Filer/Produkter.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Navn\t Egenskap\t Antall\t Kategori \r\nfff\tf\t1\tcfgfgfg\r\nfff\tfff\t1\tcfgfgfg\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/openjfx/Filer/Produkter.csv b/src/main/java/org/openjfx/Filer/Produkter.csv
--- a/src/main/java/org/openjfx/Filer/Produkter.csv	(revision 4a333706f215c43b219595701b25869fe49d9d07)
+++ b/src/main/java/org/openjfx/Filer/Produkter.csv	(date 1620367842510)
@@ -1,3 +1,4 @@
+Navn	 Egenskap	 Antall	 Kategori 
 Navn	 Egenskap	 Antall	 Kategori 
 fff	f	1	cfgfgfg
 fff	fff	1	cfgfgfg
Index: src/main/java/org/openjfx/Controller/ProdukterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.openjfx.Controller;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.concurrent.WorkerStateEvent;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.TextFieldTableCell;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.util.converter.IntegerStringConverter;\r\nimport org.openjfx.App;\r\nimport org.openjfx.Exceptions.InvalidAntallException;\r\nimport org.openjfx.Exceptions.InvalidEgenskapException;\r\nimport org.openjfx.Exceptions.InvalidNavnException;\r\nimport org.openjfx.Filbehandling.FileOpenerCSV;\r\nimport org.openjfx.Filbehandling.LagreCSV;\r\nimport org.openjfx.Lagring.LagringKategori;\r\nimport org.openjfx.Lagring.LagringProdukt;\r\nimport org.openjfx.Produkter.*;\r\nimport org.openjfx.Sleep;\r\nimport org.openjfx.Validering.Regex;\r\n\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Optional;\r\nimport java.util.ResourceBundle;\r\n\r\nimport static org.openjfx.Produkter.KonverterListe.fraKomponenttilArray;\r\n\r\n\r\npublic class ProdukterController implements Initializable {\r\n\r\n    ObservableList<Produkt> produktObservableList;\r\n    ObservableList<Kategori> kategoriObservableList;\r\n\r\n    public ComboBox<String> comboKategori;\r\n\r\n    public TextField txtNavn;\r\n    public TextField txtEgenskap;\r\n    public Spinner<Integer> spnAntall;\r\n    public Label lblPrisogNavn;\r\n\r\n    public TableColumn<Object, Integer> colAntall;\r\n    public TableColumn<Object, String> colNavn;\r\n    public TableColumn<Object, String> colKategori;\r\n    public TableColumn<Object, String> colEgenskap;\r\n\r\n    public TextField txtSøk;\r\n    public ComboBox<String> KategoriValg;\r\n\r\n    public Button btnÅpne;\r\n    public Button btnLeggtil;\r\n    public Button btnSlett;\r\n    public Button btnLagre;\r\n    public Label lblFeilmld;\r\n    public TextField txtKategori;\r\n    public Button btnLeggtilKat;\r\n    public Button btnFjernKat;\r\n\r\n    private Sleep task;\r\n\r\n\r\n    @FXML\r\n    private TableView<Produkt> tableView;\r\n    private Kategoriliste kategorier;\r\n\r\n    @FXML\r\n    void btnTilbake(ActionEvent event) throws IOException {\r\n        App.setRoot(\"logginn\");\r\n    }\r\n\r\n    private Produktliste produktliste = new Produktliste();\r\n\r\n    private void setKategorier() {\r\n        ArrayList<Kategori> liste = LagringKategori.hentFraFil();\r\n        ArrayList<String> ut = new ArrayList<>();\r\n\r\n        for (Kategori k : liste){\r\n            ut.add(k.getNavn());\r\n        }\r\n\r\n        ObservableList<String> os = KonverterListe.fraArraytilObservable(ut);\r\n        comboKategori.setItems(os);\r\n        comboKategori.getSelectionModel().selectFirst();\r\n    }\r\n\r\n    //Tømmer tekstfelt\r\n    private void nullstillTxt() {\r\n        txtNavn.setText(\"\");\r\n        txtEgenskap.setText(\"\");\r\n    }\r\n\r\n    private void oppdater() {\r\n        tableView.getItems().removeAll();\r\n        tableView.setItems(valgtTypeListe());\r\n        txtSøk.clear();\r\n\r\n\r\n    }\r\n\r\n    @FXML\r\n    private void btnÅpne(ActionEvent event) {\r\n        produktliste.fjernAlt();\r\n        hemKnapper();\r\n        lblFeilmld.setText(\"Produkter lastes inn...\");\r\n        lblPrisogNavn.setText(\"\");\r\n        setKategorier();\r\n        task = new Sleep();\r\n        task.setOnSucceeded(this::threadDone);\r\n        task.setOnFailed(this::threadFailed);\r\n        Thread th = new Thread(task);\r\n        th.setDaemon(true);\r\n        th.start();\r\n    }\r\n\r\n    private void threadDone(WorkerStateEvent workerStateEvent) {\r\n        produktliste = task.getValue();\r\n        produktliste.attachTableView(tableView);\r\n        if (produktliste == null) {\r\n            lblFeilmld.setText(\"Fant ingen produkter\");\r\n        } else {\r\n            produktliste.attachTableView(tableView);\r\n            setKategorivalg();\r\n            if (produktliste.isEmpty()) {\r\n                lblFeilmld.setText(\"Fant ingen produkter\");\r\n            } else {\r\n                lblFeilmld.setText(\"Viser alle lagrede produkter\");\r\n            }\r\n        }\r\n        aktiverKnapper();\r\n        oppdater();\r\n    }\r\n\r\n    private void threadFailed(WorkerStateEvent event) {\r\n        var e = event.getSource().getException();\r\n        lblFeilmld.setText(\"Feil ved åpning av fil\");\r\n        aktiverKnapper();\r\n    }\r\n\r\n\r\n    // Metode som aktiver knapper osv\r\n    private void aktiverKnapper() {\r\n        btnÅpne.setDisable(false);\r\n        btnLeggtil.setDisable(false);\r\n        tableView.setDisable(false);\r\n        txtSøk.setDisable(false);\r\n        txtNavn.setDisable(false);\r\n        txtEgenskap.setDisable(false);\r\n        spnAntall.setDisable(false);\r\n        comboKategori.setDisable(false);\r\n        btnLagre.setDisable(false);\r\n        btnLeggtilKat.setDisable(false);\r\n        btnFjernKat.setDisable(false);\r\n        btnSlett.setDisable(false);\r\n    }\r\n\r\n    //Metode som hemmer knapper osv\r\n    private void hemKnapper() {\r\n        btnÅpne.setDisable(true);\r\n        btnSlett.setDisable(true);\r\n        btnLeggtil.setDisable(true);\r\n        tableView.setDisable(true);\r\n        //txtSøk.setDisable(true);\r\n        txtNavn.setDisable(true);\r\n        //comboType.setDisable(true);\r\n        //typevalg.setDisable(true);\r\n        btnLagre.setDisable(true);\r\n        btnLeggtilKat.setDisable(true);\r\n        btnFjernKat.setDisable(true);\r\n        btnSlett.setDisable(true);\r\n    }\r\n\r\n\r\n    //Søkefelt som filtrerer dataliste\r\n    @FXML\r\n    void SøkeValg(ActionEvent event) {\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        tableView.setEditable(true);\r\n        colEgenskap.setCellFactory(TextFieldTableCell.forTableColumn());\r\n        colNavn.setCellFactory(TextFieldTableCell.forTableColumn());\r\n        colAntall.setCellFactory(TextFieldTableCell.forTableColumn(new IntegerStringConverter()));\r\n        comboKategori.getSelectionModel().selectFirst();\r\n        btnLeggtil.setDisable(true);\r\n        txtNavn.setDisable(true);\r\n        txtEgenskap.setDisable(true);\r\n        spnAntall.setDisable(true);\r\n        comboKategori.setDisable(true);\r\n        btnLeggtilKat.setDisable(true);\r\n        btnFjernKat.setDisable(true);\r\n        setKategorier();\r\n\r\n        try {\r\n            produktliste = FileOpenerCSV.ListefraCSV();\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void setKategorivalg() {\r\n        ArrayList<String> kategorier = new ArrayList<>();\r\n        ArrayList<Produkt> a = fraKomponenttilArray(produktliste);\r\n\r\n        kategorier.add(\"Alle\");\r\n\r\n        for (Produkt p : a) {\r\n            boolean finnes = false;\r\n            for (String s : kategorier) {\r\n                if (p.getKategori().equalsIgnoreCase(s))\r\n                    finnes = true;\r\n            }\r\n            if (!finnes) {\r\n                kategorier.add(p.getKategori());\r\n            }\r\n        }\r\n\r\n        ObservableList<String> os = KonverterListe.fraArraytilObservable(kategorier);\r\n        KategoriValg.setItems(os);\r\n        KategoriValg.getSelectionModel().selectFirst();\r\n    }\r\n\r\n    private ObservableList<Produkt> valgtTypeListe() {\r\n        String typestring = KategoriValg.getValue().toString();\r\n\r\n        ArrayList<Produkt> alle = KonverterListe.fraKomponenttilArray(produktliste);\r\n        ObservableList<Produkt> ny = FXCollections.observableArrayList();\r\n\r\n        for (Produkt p : alle) {\r\n            if (p.getKategori().matches(typestring) || typestring.equalsIgnoreCase(\"Alle\")) {\r\n                ny.add(p);\r\n            }\r\n        }\r\n        return ny;\r\n    }\r\n\r\n\r\n    public void velgKategori(ActionEvent event) {\r\n        try {\r\n            tableView.setItems(valgtTypeListe());\r\n        } catch (Exception e) {\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public void Søk(KeyEvent keyEvent) {\r\n        if (txtSøk.getText().isBlank()){\r\n            tableView.setItems(valgtTypeListe());\r\n            return;\r\n        }\r\n        ObservableList<Produkt> resultat;\r\n        ObservableList<Produkt> l = valgtTypeListe();\r\n\r\n        if (txtSøk.getText() != null){\r\n            resultat = Produktliste.søkEtterString(txtSøk.getText(), l);\r\n\r\n            if (resultat == null){\r\n            tableView.setItems(FXCollections.observableArrayList());\r\n            }\r\n            else {\r\n                tableView.setItems(resultat);\r\n            }\r\n        }\r\n\r\n    }\r\n    private void lagre() throws IOException {\r\n        LagreCSV.save(fraKomponenttilArray(produktliste));\r\n    }\r\n\r\n    public void btnlagre(ActionEvent event) throws IOException {\r\n        LagreCSV.save(fraKomponenttilArray(produktliste));\r\n        FileChooser fileChooser = new FileChooser();\r\n        fileChooser.setTitle(\"Lagre registrering...\");\r\n        fileChooser.setInitialFileName(\"Register\"+ LocalDate.now());\r\n        FileChooser.ExtensionFilter filter1 = new FileChooser.ExtensionFilter(\"CSV files (*.csv\", \"*.csv\");\r\n        FileChooser.ExtensionFilter filter2 = new FileChooser.ExtensionFilter(\"TXT files (*.txt\", \"*.txt\");\r\n        fileChooser.getExtensionFilters().add(filter1);\r\n        fileChooser.getExtensionFilters().add(filter2);\r\n        File dest = fileChooser.showSaveDialog(null);\r\n        if (dest != null){\r\n            try {\r\n                Files.copy(Paths.get(\"src/main/java/org/openjfx/Filer/Produkter.csv\"), dest.toPath());\r\n            }\r\n            catch (IOException e){\r\n                lblFeilmld.setText(\"Filen ble ikke lastet ned. Vennligst prøv igjen.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void btnLeggTil(ActionEvent event) throws FileNotFoundException {\r\n        produktliste.fjernAlt();\r\n        String navn = txtNavn.getText();\r\n        String egenskap = txtEgenskap.getText();\r\n        Kategori kategori = LagringKategori.finnKategori(comboKategori.getValue());\r\n        if (navn == null || navn.isEmpty()) {\r\n            lblPrisogNavn.setText(\"Skriv inn riktig navn\");\r\n            lblFeilmld.setText(\"\");\r\n            try {\r\n                Integer.parseInt(spnAntall.getPromptText());\r\n            } catch (InvalidNavnException | InvalidAntallException e){\r\n                lblPrisogNavn.setText(\"Skriv inn riktig navn og antall\");\r\n                lblFeilmld.setText(\"\");\r\n            }\r\n        } else if (egenskap == null || egenskap.isEmpty()) {\r\n            lblPrisogNavn.setText(\"Skriv inn riktig egenskap\");\r\n            lblFeilmld.setText(\"\");\r\n            try {\r\n                Integer.parseInt(spnAntall.getPromptText());\r\n            } catch (InvalidEgenskapException | InvalidAntallException e) {\r\n                lblPrisogNavn.setText(\"Skriv inn riktig egenskap og antall\");\r\n                lblFeilmld.setText(\"\");\r\n            }\r\n        } else {\r\n            try {\r\n                int antall = spnAntall.getValue();\r\n                System.out.println(antall);\r\n                if (antall > 0) {\r\n                    Produkt produkt = new Produkt(navn, egenskap, antall, kategori);\r\n                    nullstillTxt();\r\n                    produktliste = FileOpenerCSV.ListefraCSV();\r\n                    LagringProdukt.leggTilProdukt(produkt, produktliste);\r\n                    lblFeilmld.setText(\"Produkt lagt til. Husk å lagre!\");\r\n                    lblPrisogNavn.setText(\"\");\r\n                    produktliste.fjernAlt();\r\n                    produktliste = FileOpenerCSV.ListefraCSV();\r\n                    oppdater();\r\n                    setKategorivalg();\r\n                    setKategorier();\r\n                } else {\r\n                    lblPrisogNavn.setText(\"Antall må være med enn 0\");\r\n                    lblFeilmld.setText(\"\");\r\n                }\r\n            } catch (InvalidAntallException | IOException e) {\r\n                lblPrisogNavn.setText(\"Skriv inn riktig antall\");\r\n                lblFeilmld.setText(\"\");\r\n                txtNavn.setText(\"\");\r\n                txtEgenskap.setText(\"\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void btnSlett(ActionEvent event) throws IOException {\r\n        Produkt slett = tableView.getSelectionModel().getSelectedItem();\r\n        produktliste.fjern(slett);\r\n        lblFeilmld.setText(\"Produktet er slettet!\");\r\n        oppdater();\r\n        lagre();\r\n    }\r\n\r\n    public void btnLeggTilKat(ActionEvent event) throws IOException {\r\n\r\n        TextInputDialog td = new TextInputDialog(\"Nytt navn på kategori...\");\r\n        td.setHeaderText(\"Legg til ny kategori\");\r\n        Optional<String> nyttnavn = td.showAndWait();\r\n\r\n        LagringKategori.LeggTil(nyttnavn.get());\r\n        setKategorier();\r\n        lblPrisogNavn.setText(\"Kategori lagt til\");\r\n    }\r\n\r\n\r\n    public void btnFjern(ActionEvent event) {\r\n        Alert alert = new Alert(Alert.AlertType.WARNING);\r\n        alert.setTitle(\"Advarsel!\");\r\n        alert.setHeaderText(\"Du er i ferd med å slette en kategori og alle tilhørende produkter!\");\r\n        alert.setContentText(\"Vil du avbryte?\");\r\n        ButtonType show = new ButtonType(\"Slett kategori\", ButtonBar.ButtonData.RIGHT);\r\n        alert.getButtonTypes().add(show);\r\n\r\n        ButtonBar.setButtonUniformSize(alert.getDialogPane().lookupButton(show), false);\r\n        alert.getDialogPane().lookupButton(show).addEventFilter(ActionEvent.ACTION, eevent -> {\r\n            String kategori = comboKategori.getValue();\r\n            try {\r\n                LagringProdukt.slettProdukter(kategori);\r\n                LagringKategori.slettKategori(kategori);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            setKategorier();\r\n            comboKategori.getSelectionModel().selectFirst();\r\n            lblPrisogNavn.setText(\"Kategori slettet\");});\r\n            event.consume();\r\n\r\n            Optional<ButtonType> option = alert.showAndWait();\r\n            oppdater();\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    public void editTvNavn(TableColumn.CellEditEvent<Object, String> cellEditEvent) throws IOException {\r\n        Produkt produkt = tableView.getSelectionModel().getSelectedItem();\r\n        try {\r\n            String navn = cellEditEvent.getNewValue();\r\n            Regex.navnRegex(navn);\r\n            produkt.setNavn(navn);\r\n            lblFeilmld.setText(\"Navnet er endret!\");\r\n        }\r\n        catch (InvalidNavnException e){\r\n            lblFeilmld.setText(\"Ugyldig navn. Vennligst prøv igjen.\");\r\n        }\r\n        tableView.refresh();\r\n        lblFeilmld.setText(\"Navnet er endret!\");\r\n        lagre();\r\n    }\r\n\r\n    public void editTvAntall(TableColumn.CellEditEvent<Object, Integer> cellEditEvent) throws IOException {\r\n        Produkt produkt = tableView.getSelectionModel().getSelectedItem();\r\n        try {\r\n            int antall = cellEditEvent.getNewValue();\r\n            Regex.antallRegex(antall);\r\n            produkt.setAntall(antall);\r\n            lblFeilmld.setText(\"Antall er endret!\");\r\n        }\r\n        catch (InvalidAntallException e){\r\n            lblFeilmld.setText(\"Antall må være over null!\");\r\n        }\r\n        tableView.refresh();\r\n        lagre();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/openjfx/Controller/ProdukterController.java b/src/main/java/org/openjfx/Controller/ProdukterController.java
--- a/src/main/java/org/openjfx/Controller/ProdukterController.java	(revision 4a333706f215c43b219595701b25869fe49d9d07)
+++ b/src/main/java/org/openjfx/Controller/ProdukterController.java	(date 1620367879009)
@@ -12,6 +12,7 @@
 import javafx.scene.control.TextField;
 import javafx.scene.control.cell.TextFieldTableCell;
 import javafx.scene.input.KeyEvent;
+import javafx.stage.FileChooser;
 import javafx.util.converter.IntegerStringConverter;
 import org.openjfx.App;
 import org.openjfx.Exceptions.InvalidAntallException;
@@ -26,6 +27,7 @@
 import org.openjfx.Validering.Regex;
 
 
+import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.net.URL;
Index: src/main/java/org/openjfx/Filer/Kat.jobj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000\u0013java.util.ArrayListx��\u001D��a�\u0003\u0000\u0001I\u0000\u0004sizexp\u0000\u0000\u0000\u0001w\u0004\u0000\u0000\u0000\u0001sr\u0000\u001Eorg.openjfx.Produkter.Kategori�����v��\u0002\u0000\u0001L\u0000\u0004navnt\u0000\u0012Ljava/lang/String;xpt\u0000\u0007cfgfgfgx
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/openjfx/Filer/Kat.jobj b/src/main/java/org/openjfx/Filer/Kat.jobj
--- a/src/main/java/org/openjfx/Filer/Kat.jobj	(revision 4a333706f215c43b219595701b25869fe49d9d07)
+++ b/src/main/java/org/openjfx/Filer/Kat.jobj	(date 1620367858567)
@@ -1,1 +1,1 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr org.openjfx.Produkter.Kategori�����v�� L navnt Ljava/lang/String;xpt cfgfgfgx
\ No newline at end of file
+�� sr java.util.ArrayListx����a� I sizexp   w   sr org.openjfx.Produkter.Kategori�����v�� L navnt Ljava/lang/String;xpt Traktorx
\ No newline at end of file
